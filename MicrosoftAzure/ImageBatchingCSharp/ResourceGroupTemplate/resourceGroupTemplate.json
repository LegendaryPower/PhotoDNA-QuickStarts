{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"targetStorageAccountName": {
			"type": "string",
			"metadata": {
				"description": "the name of the storage account that will be monitored by the function app"
			}
		},
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "name your new function that will be created"
      }
    },
		"PhotoDNASubscriptionEndpoint": {
			"type": "string",
			"metadata": {
				"description": "Your unique PhotoDNA endpoint addess this can be found here: "
			}
		},
    "PhotoDNASubscriptionKey": {
      "type": "string",
      "metadata": {
        "description": "Your unique PhotoDNA subscription key, this can be found here: "
      }
    },
    "emailOnHit":{
      "type": "bool",
      "metadata": {
        "description": "With this selected, an email will be sent to the email designated below when PDNA finds a match. You must enter the following fields for this to functions: smtpHostAddress, smtpPassword, smtpUserName, notificationSenderEmail, and notificationReceiverEmail"
      }
    },
    "emailOnError":{
      "type": "bool",
      "metadata": {
        "description": "With this selected, an email will be sent to the email designated below when unexpected errors occur. You must enter the following fields for this to functions: smtpHostAddress, smtpPassword, smtpUserName, notificationSenderEmail, and notificationReceiverEmail"
      }
    },
    "callbackOnHit":{
      "type": "bool",
      "metadata": {
        "description": "With this selected, the application will Post to the address designated by the field 'callbackEndpoint' designated bellow when PDNA finds a match"
      }
    },
    "callbackOnError":{
      "type": "bool",
      "metadata": {
        "description": "With this selected, the application will Post to the address designated by the field 'callbackEndpoint' designated bellow when an unexpected error occurs"
      }
    },
		"smtpHostAddress": {
			"type": "string",
      "defaultValue": "",
			"metadata": {
				"description": "The Host address used for your Simple Mail account"
			}
		},
		"smtpPassword": {
			"type": "string",
      "defaultValue": "",
			"metadata": {
				"description": "The password created for your specific user for Simple Mail"
			}
		},
		"smtpUserName": {
			"type": "string",
      "defaultValue": "",
			"metadata": {
				"description": "The user name used to create you Simple Mail account"
			}
		},
		"notificationSenderEmail": {
			"type": "string",
      "defaultValue": "",
			"metadata": {
				"description": "The email account that will be used to send the notification emails."
			}
		},
		"notificationReceiverEmail": {
			"type": "string",
      "defaultValue": "",
			"metadata": {
				"description": "The email that will receive notificaitons when PhotoDNA happens to find a match on images uploaded to your storage"
			}
		},
		"callbackEndpoint": {
			"type": "string",
      "defaultValue": "",
			"metadata": {
				"description": "(optional) when PhotoDNA returns a match or errors occure, the results will be posted to this address"
			}
		}
	},
	"variables": {
		"functionAppName": "[parameters('functionAppName')]",
		"storageAccountName": "[parameters('targetStorageAccountName')]",
		"senderEmail": "[parameters('notificationSenderEmail')]",
		"receiverEmail": "[parameters('notificationReceiverEmail')]",
		"subscriptionEndpoint": "[parameters('PhotoDNASubscriptionEndpoint')]",
		"subscriptionKey": "[parameters('PhotoDNASubscriptionKey')]",
    "callbackEndpoint": "[parameters('callbackEndpoint')]",
    "smtpHostAddress": "[parameters('smtpHostAddress')]",
    "smtpPassword": "[parameters('smtpPassword')]",
    "smtpUserName": "[parameters('smtpUserName')]",
    "imageQueueName": "pdnamonitoringimagequeue",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "sbVersion": "2017-04-01",
    "emailOnHit": "[parameters('emailOnHit')]",
    "emailOnError":"[parameters('emailOnError')]",
    "callbackOnHit":"[parameters('callbackOnHit')]",
    "callbackOnError":"[parameters('callbackOnError')]"

	},
	"resources": [
        {
						"apiVersion": "2016-08-01",
						"kind": "functionapp",
						"name": "[parameters('functionAppName')]",
						"location": "[resourceGroup().location]",
						"properties": {
							"config": {
								"bindings": [
									{
										"authLevel": "anonymous",
										"name": "req",
										"type": "blobTrigger",
										"direction": "in",
										"path": "YourBlobNameHere/{name}.{ext}",
										"connection": "AzureWebJobsStorage"
									}
								]
							},
							"appSettings": [
								{
									"name": "AzureWebJobsDashboard",
									"value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
								},
                {
                  "name": "AzureWebJobsStorage",
                  "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
                },
                {
                  "name": "storageAccountName",
                  "value": "variables('storageAccountName')"

                },
								{
									"name": "functionAppName",
									"value": "variables('functionAppName')"
								},
								{
									"name": "senderEmail",
									"value": "variables('senderEmail')"
								},
								{
									"name": "receiverEmail",
									"value": "variables('receiverEmail')"
								},
								{
									"name": "subscriptionEndpoint",
									"value": "variables('subscriptionEndpoint')"
								},
								{
									"name": "subscriptionKey",
									"value": "variables('subscriptionKey')"
								},
								{
									"name": "callbackEndpoint",
									"value": "variables('callbackEndpoint')"
								},
								{
									"name": "smtpHostAddress",
									"value": "variables('smtpHostAddress')"
								},
								{
									"name": "smtpPassword",
									"value": "variables('smtpPassword')"
								},
								{
									"name": "smtpUserName",
									"value": "variables('smtpUserName')"
								}
							]
						},
						"resources": [
							{
								"name": "appsettings",
								"type": "config",
								"apiVersion": "2016-08-01",
								"dependsOn": [
									"[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
								],
								"properties": {
									"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]",
									"AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]",
                  "functionAppName": "[parameters('functionAppName')]",
                  "storageAccountName": "[parameters('targetStorageAccountName')]",
                  "senderEmail": "[parameters('notificationSenderEmail')]",
                  "receiverEmail": "[parameters('notificationReceiverEmail')]",
                  "subscriptionEndpoint": "[parameters('PhotoDNASubscriptionEndpoint')]",
                  "subscriptionKey": "[parameters('PhotoDNASubscriptionKey')]",
                  "callbackEndpoint": "[parameters('callbackEndpoint')]",
                  "smtpHostAddress": "[parameters('smtpHostAddress')]",
                  "smtpPassword": "[parameters('smtpPassword')]",
                  "smtpUserName": "[parameters('smtpUserName')]",
                  "imageQueueName": "pdnamonitoringimagequeue",
                  "emailOnHit": "[parameters('emailOnHit')]",
                  "emailOnError":"[parameters('emailOnError')]",
                  "callbackOnHit":"[parameters('callbackOnHit')]",
                  "callbackOnError":"[parameters('callbackOnError')]"
								}
							}
						],
						"type": "Microsoft.Web/sites"
					}

	],
		"outputs":
		{}
}
